/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import core.Donor;
import dao.DBConnection;
import dao.DonorDAO;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import javax.swing.JOptionPane;
import net.sf.jasperreports.view.*;
import net.sf.jasperreports.engine.*;
import net.sf.jasperreports.engine.design.JRDesignQuery;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;

/**
 *
 * @author legen
 */
public class ReportFrame extends javax.swing.JFrame {

    /**
     * Creates new form ReportFrame
     */
    private DBConnection conn;
   
    
    public ReportFrame(DBConnection myConn) {
        initComponents();
        this.conn = myConn;
        
        SimpleDateFormat sdf = new SimpleDateFormat("YYYY-MM-dd");
        Date date = new Date();
        from_fdate.setText(sdf.format(date));
        to_fdate.setText(sdf.format(date));
        from_cdate.setText(sdf.format(date));
        to_cdate.setText(sdf.format(date));

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cReport_panel = new javax.swing.JPanel();
        cto_label = new javax.swing.JLabel();
        cfrom_label = new javax.swing.JLabel();
        from_cdate = new javax.swing.JTextField();
        to_cdate = new javax.swing.JTextField();
        generate_creport = new javax.swing.JButton();
        min_donation_label = new javax.swing.JLabel();
        min_donation = new javax.swing.JTextField();
        fReport_panel = new javax.swing.JPanel();
        ffrom_label = new javax.swing.JLabel();
        fto_label = new javax.swing.JLabel();
        from_fdate = new javax.swing.JTextField();
        to_fdate = new javax.swing.JTextField();
        generate_freport = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1466, 754));

        cReport_panel.setBorder(javax.swing.BorderFactory.createTitledBorder("Contributions Report"));

        cto_label.setText("To:");

        cfrom_label.setText("From:");

        generate_creport.setText("Generate Report");
        generate_creport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generate_creportActionPerformed(evt);
            }
        });

        min_donation_label.setText("Min. Donation");

        javax.swing.GroupLayout cReport_panelLayout = new javax.swing.GroupLayout(cReport_panel);
        cReport_panel.setLayout(cReport_panelLayout);
        cReport_panelLayout.setHorizontalGroup(
            cReport_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cReport_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(cReport_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(generate_creport)
                    .addGroup(cReport_panelLayout.createSequentialGroup()
                        .addComponent(cfrom_label)
                        .addGap(18, 18, 18)
                        .addComponent(from_cdate, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cto_label)
                        .addGap(18, 18, 18)
                        .addComponent(to_cdate, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(cReport_panelLayout.createSequentialGroup()
                        .addComponent(min_donation_label)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(min_donation, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(195, Short.MAX_VALUE))
        );
        cReport_panelLayout.setVerticalGroup(
            cReport_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cReport_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(cReport_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cfrom_label)
                    .addComponent(cto_label)
                    .addComponent(from_cdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(to_cdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(cReport_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(min_donation_label)
                    .addComponent(min_donation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                .addComponent(generate_creport)
                .addContainerGap())
        );

        fReport_panel.setBorder(javax.swing.BorderFactory.createTitledBorder("Funds Report"));

        ffrom_label.setText("From:");

        fto_label.setText("To:");

        generate_freport.setText("Generate Report");
        generate_freport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generate_freportActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout fReport_panelLayout = new javax.swing.GroupLayout(fReport_panel);
        fReport_panel.setLayout(fReport_panelLayout);
        fReport_panelLayout.setHorizontalGroup(
            fReport_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fReport_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(fReport_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(fReport_panelLayout.createSequentialGroup()
                        .addComponent(ffrom_label)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(from_fdate, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(fto_label)
                        .addGap(18, 18, 18)
                        .addComponent(to_fdate, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(generate_freport))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        fReport_panelLayout.setVerticalGroup(
            fReport_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fReport_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(fReport_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ffrom_label)
                    .addComponent(fto_label)
                    .addComponent(from_fdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(to_fdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(generate_freport)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(fReport_panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cReport_panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(fReport_panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                .addComponent(cReport_panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void generate_freportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generate_freportActionPerformed
        // TODO add your handling code here:
        try{
            
            String date1 = from_fdate.getText();
            String date2 = to_fdate.getText();
            String range = "From " + date1 + " through " + date2;
            
            //Hashmap holds parameters that will be used to fill the report
            HashMap params = new HashMap();
            params.put("date_range", range);
           
            String sql_query = "select fund.name as Fund, sum(amt) as Total\n" +
                "from fund join contribution\n" +
                "where fund.name = contribution.fund_name\n" + 
                 "and c_date >= '" + date1 + "' and c_date <= '"+ date2 +"'\n" +
                "group by fund.name order by fund.name asc;";
            
            //compile, fill and view the produced the jasport report
            JasperDesign jd = JRXmlLoader.load("src\\funds_report.jrxml");
            JRDesignQuery jQuery = new JRDesignQuery();
            jQuery.setText(sql_query);
            jd.setQuery(jQuery);
            JasperReport jr = JasperCompileManager.compileReport(jd);
            JasperPrint jp = JasperFillManager.fillReport(jr, params, this.conn.getConnection());
            
             if(jp.getPages().size() != 0)
                {
                    //JasperViewer.viewReport(jp, false);
                    String path=System.getProperty("user.dir");
                    JasperExportManager.exportReportToPdfFile(jp, path + "/freports/FReport.pdf");
                    JasperViewer.viewReport(jp, false);
                }
            
        }catch(Exception e){
            System.out.println("Something went wrong in generating the reports:"
                    + e);
        }
    }//GEN-LAST:event_generate_freportActionPerformed

    private void generate_creportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generate_creportActionPerformed
        // TODO add your handling code here:
        double min_d = 0;
       
        if(!min_donation.getText().isEmpty())
        {
            try{
                 String minDonation = min_donation.getText();
                 min_d = Double.parseDouble(minDonation);
            }catch(Exception e){
                System.out.println("Please input proper value for min donation.");
            }
        }
        
         try{
            String date1 = from_cdate.getText();
            String date2 = to_cdate.getText();
            String range = "From " + date1 + " through " + date2;
            
            DonorDAO donorDAO = new DonorDAO(conn);
            List<Donor> donorList = donorDAO.getAllDonors();
            int reportsGenerated = 0;
            //For each donor in the list that has contributed
            //within the time period, generate a contributions report
            for(int i = 0; i < donorList.size(); i++)
            {   
                Donor d = donorList.get(i);
                int envNum = d.getEnv_num();
                String address = d.getF_name() + " " + d.getL_name() + "\n\n"
                        + d.getStreet() + "\n\n" + d.getCity() + ", " + d.getState() +
                        " " + d.getZip();
                
                //Hashmap holds parameters that will be used to fill the report
                HashMap params = new HashMap();
                params.put("date_range", range);
                params.put("address", address);
                
                String sql_query = "SELECT env_num as EnvNum, ID, f_name as FirstName, l_name as LastName,\n" +
                "c_date as Date, c_type as Type, fund_name as Fund, amt as Amt, \n" +
                "note as Note, street, state, zip, city \n" +
                "FROM contribution natural join donor\n" +
                "where env_num = " + envNum + " and c_date >= '" + date1 + "' and c_date <= '" + date2 + "'\n" +
                 "and amt >= " + Double.toString(min_d) + " order by c_date asc;";

                 System.out.println(sql_query);
                 
                //compile, fill and view the produced the jasport report
                JasperDesign jd = JRXmlLoader.load("src\\contributions_report.jrxml");
                JRDesignQuery jQuery = new JRDesignQuery();
                jQuery.setText(sql_query);
                jd.setQuery(jQuery);
                JasperReport jr = JasperCompileManager.compileReport(jd);
                JasperPrint jp = JasperFillManager.fillReport(jr, params, this.conn.getConnection());
                
                //Genrate save the report in a pdf if it is not empty
                if(jp.getPages().size() != 0)
                {   //JasperViewer.viewReport(jp, false);
                    String path=System.getProperty("user.dir");
                    JasperExportManager.exportReportToPdfFile(jp, path + "/creports/CReport" + envNum + ".pdf");
                    reportsGenerated++;
                }
            }
            
            JOptionPane.showMessageDialog(null, "Contribution reports for " + reportsGenerated + " donor(s) have been generated.");
            
        }catch(Exception e){
            System.out.println("Something went wrong in generating the reports:"
                    + e);
        }
    }//GEN-LAST:event_generate_creportActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ReportFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ReportFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ReportFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ReportFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ReportFrame(null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel cReport_panel;
    private javax.swing.JLabel cfrom_label;
    private javax.swing.JLabel cto_label;
    private javax.swing.JPanel fReport_panel;
    private javax.swing.JLabel ffrom_label;
    private javax.swing.JTextField from_cdate;
    private javax.swing.JTextField from_fdate;
    private javax.swing.JLabel fto_label;
    private javax.swing.JButton generate_creport;
    private javax.swing.JButton generate_freport;
    private javax.swing.JTextField min_donation;
    private javax.swing.JLabel min_donation_label;
    private javax.swing.JTextField to_cdate;
    private javax.swing.JTextField to_fdate;
    // End of variables declaration//GEN-END:variables
}
